"use strict";var g_iScrollObj,nua=navigator.userAgent,isMobile=/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(nua),isIOS=/iPhone|iPad|iPod/i.test(nua),isIphone=/iPhone/i.test(nua),isAndroid=-1<nua.indexOf("Mozilla/5.0")&&-1<nua.indexOf("Android ")&&-1<nua.indexOf("AppleWebKit")&&-1===nua.indexOf("Chrome"),isWindowsOS="Win32"==navigator.platform||"Windows"==navigator.platform,isMacOS="Mac68K"==navigator.platform||"MacPPC"==navigator.platform||"Macintosh"==navigator.platform||"MacIntel"==navigator.platform,isIE=window.ActiveXObject||"ActiveXObject"in window,isEdge=-1<nua.indexOf("Edge"),g_LastScrollTop=0,g_GetWindowWdith=function(){return 100<window.innerWidth?window.innerWidth:100<screen.availWidth?screen.availWidth:$(window).width()},g_GetWindowsHeight=function(){return 100<window.innerHeight?window.innerHeight:100<screen.availHeight?screen.availHeight:$(window).height()},g_GotoUrl=function(o){isIOS||g_ShowHideLoading(!0),-1==location.href.indexOf(o)?location.href=o:location.reload(!0)},g_OpenUrl=function(o,e){void 0!==e?window.open(o,"",e).focus():window.open("","").location.href=o},g_PageScrollTo=function(o,e,n){var i=0;try{i=parseInt(e)}catch(o){i=1e3}(i<=0||isNaN(i))&&(i=1e3),(window.opera?"CSS1Compat"==document.compatMode?$("html"):$("body"):$("html,body")).stop().animate({scrollTop:void 0===o?0:$(o).offset().top+(void 0===n?0:n)},i,"swing")},g_ShowHideLoading=function(o){o?$("#loadingDiv").css("display","flex"):$("#loadingDiv").css("display","none")},g_IframeLoadEventHandler=function(){var o=this;$("#"+o.id).get(0)&&(isIOS?g_SetIframeHeight(o.id,$($("#"+o.id).get(0).contentWindow.document.body).outerHeight()):setTimeout(function(){g_SetIframeHeight(o.id,$($("#"+o.id).get(0).contentWindow.document.body).outerHeight())},1))},g_SetIframeLoadEvent=function(o,e){var n=document.getElementById(o);n&&(e?n.addEventListener?n.addEventListener("load",g_IframeLoadEventHandler):n.onload=g_IframeLoadEventHandler:n.removeEventListener?n.removeEventListener("load",g_IframeLoadEventHandler):n.onload=null)},g_ShowHideLogin=function o(e,n){e?(isIOS&&(g_LastScrollTop=g_WindowScrollTop),$(".login-all").fadeIn(250),$("body").addClass("dialog-open"),$("#iframeLogin").get(0)&&(g_SetIframeLoadEvent("iframeLogin",!0),$("#iframeLogin").get(0).contentWindow.location.replace("/login.aspx?fid=iframeLogin")),1==n?$(".login-all .close-btn").on("click",function(){top.location.replace("/")}):$(".login-all .close-btn").on("click",function(){o()}),$(window).on("resize",["iframeLogin"],g_SetDilogPosAndSize),$(window).on("orientationchange",["iframeLogin"],g_SetDilogPosAndSize)):(g_IframeContentLoaded=!1,$(window).off("resize",g_SetDilogPosAndSize),$(window).off("orientationchange",g_SetDilogPosAndSize),g_SetIframeLoadEvent("iframeLogin",!1),$("#iframeLogin").get(0)&&$("#iframeLogin").get(0).contentWindow.location.replace("/loading.html"),$(".login-all").fadeOut(250),$("body").removeClass("dialog-open"),$(".login-all .close-btn").show(),isIOS&&$("html, body").scrollTop(g_LastScrollTop))},g_ShowHideLogin2=function o(e,n){e?(isIOS&&(g_LastScrollTop=g_WindowScrollTop),$(".login-all").fadeIn(250),$("body").addClass("dialog-open"),$("#iframeLogin").get(0)&&(g_SetIframeLoadEvent("iframeLogin",!0),$("#iframeLogin").get(0).contentWindow.location.replace("/login.aspx?mode=teacher&fid=iframeLogin")),1==n?$(".login-all .close-btn").on("click",function(){top.location.replace("/")}):$(".login-all .close-btn").on("click",function(){o()}),$(window).on("resize",["iframeLogin"],g_SetDilogPosAndSize),$(window).on("orientationchange",["iframeLogin"],g_SetDilogPosAndSize)):(g_IframeContentLoaded=!1,$(window).off("resize",g_SetDilogPosAndSize),$(window).off("orientationchange",g_SetDilogPosAndSize),g_SetIframeLoadEvent("iframeLogin",!1),$("#iframeLogin").get(0)&&$("#iframeLogin").get(0).contentWindow.location.replace("/loading.html"),$(".login-all").fadeOut(250),$("body").removeClass("dialog-open"),$(".login-all .close-btn").show(),isIOS&&$("html, body").scrollTop(g_LastScrollTop))},g_ShowHideGetPassword=function(o){o?(isIOS&&(g_LastScrollTop=g_WindowScrollTop),$(".login-all").fadeIn(250),$("body").addClass("dialog-open"),$("#iframeLogin").get(0)&&(g_SetIframeLoadEvent("iframeLogin",!0),$("#iframeLogin").get(0).contentWindow.location.replace("/getpassword.aspx?fid=iframeLogin")),$(window).on("resize",["iframeLogin"],g_SetDilogPosAndSize),$(window).on("orientationchange",["iframeLogin"],g_SetDilogPosAndSize)):(g_IframeContentLoaded=!1,$(window).off("resize",g_SetDilogPosAndSize),$(window).off("orientationchange",g_SetDilogPosAndSize),g_SetIframeLoadEvent("iframeLogin",!1),$("#iframeLogin").get(0)&&$("#iframeLogin").get(0).contentWindow.location.replace("/loading.html"),$(".login-all").fadeOut(250),$("body").removeClass("dialog-open"),isIOS&&$("html, body").scrollTop(g_LastScrollTop))},g_ShowHideFbAssociate=function(o){o?($(".login-all").show(),$("body").addClass("dialog-open"),$("#iframeLogin").css("min-height","500px"),$("#iframeLogin").attr("src","loading.html")):($("#iframeLogin").attr("src","loading.html"),$(".login-all").hide(),$("#iframeLogin").css("min-height","350px"),$("body").removeClass("dialog-open"))},g_ShowHideJoin=function(o){o?(isIOS&&(g_LastScrollTop=g_WindowScrollTop),$("body").addClass("dialog-open"),$(".join-all").fadeIn(250),$("#iframeJoinUs").get(0)&&(g_SetIframeLoadEvent("iframeJoinUs",!0),$("#iframeJoinUs").get(0).contentWindow.location.replace("/joinus.aspx?fid=iframeJoinUs&fmode=0")),$(window).on("resize",["iframeJoinUs"],g_SetDilogPosAndSize),$(window).on("orientationchange",["iframeJoinUs"],g_SetDilogPosAndSize)):(g_IframeContentLoaded=!1,$(window).off("resize",g_SetDilogPosAndSize),$(window).off("orientationchange",g_SetDilogPosAndSize),g_SetIframeLoadEvent("iframeJoinUs",!1),$("#iframeJoinUs").get(0)&&$("#iframeJoinUs").get(0).contentWindow.location.replace("/loading.html"),$(".join-all").fadeOut(250),$("body").removeClass("dialog-open"),isIOS&&$("html, body").scrollTop(g_LastScrollTop))},g_ShowHideRelogin=function(o){o?($(".relogin-all").show(500),$("body").addClass("dialog-open")):($(".relogin-all").hide(500),$("body").removeClass("dialog-open"))},g_WindowScrollTop=0,g_IframeContentLoaded=!1,g_IframeContentHeight=0,g_ShowHideFreeCourse=function(o){g_ShowHideDialog("free-all","iframeEnroll",o)},g_ShowHideDialog=function(o,e,n){0!=o.indexOf(".")&&(o="."+o),n?(g_LastScrollTop=g_WindowScrollTop,$(o).fadeIn(250),isIOS?$.lockbody():$("body").addClass("dialog-open"),g_SetIframeLoadEvent(e,!0),$(window).on("resize",[e],g_SetDilogPosAndSize),$(window).on("orientationchange",[e],g_SetDilogPosAndSize)):($("#"+e).css("height",""),g_SetIframeLoadEvent(e,g_IframeContentLoaded=!1),$(window).off("resize",g_SetDilogPosAndSize),$(window).off("orientationchange",g_SetDilogPosAndSize),isIOS?$.unlockBody():$("body").removeClass("dialog-open"),$(o).fadeOut(250),isIOS&&$("html, body").scrollTop(g_LastScrollTop))},g_HideHamburgerMenu=function(o){if(!(g_GetWindowWdith()<768)||o){var e=$(".navbar-toggle[data-toggle=collapse]")[0];"true"==e.attributes["aria-expanded"].value&&e.click()}},g_HideFreeForm=function(){g_IsFreeFormOpen&&g_ShowFreeForm()},g_SetBodyScrollByHambugerMemu=function(){"true"==$(".navbar-toggle[data-toggle=collapse]")[0].attributes["aria-expanded"].value?$("body").addClass("dialog-open"):$("body").removeClass("dialog-open")},g_SetIframeHeight=function(o,e){g_IframeContentLoaded=!0,g_IframeContentHeight=e,g_SetDilogPosAndSize([o])},g_SetDilogPosAndSize=function(o){var e,n,i;e=void 0===o[0]?o.data:o;var t=$("#"+e[0]),a=h2=g_GetWindowsHeight();try{g_IframeContentHeight=$(t.get(0).contentWindow.document.body).outerHeight()+2,$(t).css("height","")}catch(o){}var l=t.closest(".login-box");(0==l.length&&(l=t.closest(".st-tpbox")),0==l.length&&(l=t.closest(".st-lrbox")),0!=l.length?(n=l.position().top,i=t.parent().position().top,n=a<=768?20:50,h2=a-2*n-2*i,h2>g_IframeContentHeight&&(h2=g_IframeContentHeight,n=Math.floor((a-h2-i-50)/2))):(n=(l=t.closest(".st-cfbox")).offset().top,i=t.offset().top,i-=n,n=l.position().top,h2=a<480?a-2*(n=20)-i-28:a-2*n-i-24,h2>g_IframeContentHeight&&(h2=g_IframeContentHeight+2,n=Math.floor((a-h2-i-n)/2))),l.css("top",n+"px").css("margin-bottom",n+"px"),isIOS)?(t.closest(".popup-box .login-group").css("display","block").css("-webkit-overflow-scrolling","touch").css("height",h2+"px").css("overflow","auto"),$("html, body").scrollTop(0),t.css("height",g_IframeContentHeight+"px").css("overflow","auto").css("-webkit-overflow-scrolling","touch")):t.css("height",h2+"px").css("overflow","auto").css("-webkit-overflow-scrolling","touch");void 0===t.get(0).contentWindow.g_ScrollToFocusObj||isIOS||t.get(0).contentWindow.g_ScrollToFocusObj()},g_ScrollToFocusObj=function(){if(0!=$(":focus").length){var o=$(":focus")[0];o.focus();try{document.getElementById(o.id).scrollIntoView(!0)}catch(o){}}},g_CheckDateFormatEx=function(o,e){var n,i,t=o.val();if(""==o.value)return!0;if(10<t.length||t.length<8)return alert((""==e?"日期":e)+"格式錯誤..."),o.value="",o.focus(),!1;8==t.length&&(strV=t.substring(0,4)+"/"+t.substring(4,6)+"/"+t.substring(6,8),t=strV);if(/^\d{4}(\-|\/|\.)\d{1,2}\1\d{1,2}$/.test(t)){var a=t.split(RegExp.$1),l=parseInt(a[2],10),g=parseInt(a[0],10),s=parseInt(a[1],10);if(12<s||s<1)return alert((""==e?"日期":e)+"不合法..."),o.value="",o.focus(),!1;var r={1:31,3:31,4:30,5:31,6:30,7:31,8:31,9:30,10:31,11:30,12:31};if(null!=r[s]&&l<=r[s]&&0!=l){1==(n=s.toString()).length&&(s="0"+n),1==(i=l.toString()).length&&(l="0"+i);var d=g.toString()+"/"+s.toString()+"/"+l.toString();return o.value=d,!0}if(s-2==0){var c=g%4==0&&(g%100!=0||g%400==0);if((c&&l<=29||!c&&l<=28)&&0!=l)return 1==(n=s.toString()).length&&(s="0"+n),1==(i=l.toString()).length&&(l="0"+i),d=g.toString()+"/"+s.toString()+"/"+l.toString(),o.value=d,!0}}else;return o.value="",alert((""==e?"日期":e)+"格式錯誤..."),o.focus(),!1},g_SetCookie=function(o,e,n){aDay=new Date,aDay.setTime(aDay.getTime()+1e3*n*60*60*24),expDay=aDay.toGMTString(),document.cookie=o+"="+escape(e)+";expires="+expDay+";path=/"},g_DelCookie=function(o){document.cookie=o+"=;expires=Mon,02-Oct-28 00:00:01 GMT"},g_GetCookie=function(o){var e=document.cookie.match(new RegExp("(^|;) ?"+o+"=([^;]*)(;|$)"));return e?unescape(e[2]):""},MM_preloadImages=function o(){var e=document;if(e.images){e.MM_p||(e.MM_p=new Array);var n,i=e.MM_p.length,t=o.arguments;for(n=0;n<t.length;n++)0!=t[n].indexOf("#")&&(e.MM_p[i]=new Image,e.MM_p[i++].src=t[n])}},g_Logout=function(){},g_FbStatus="",g_FbLogout=function(e){FB.getLoginStatus(function(o){"connected"===o.status?FB.logout(function(o){console.log("FB登出成功..."),e||top.location.reload()}):e||top.location.reload()})},g_IsFbLogin=function(){FB.getLoginStatus(function(o){"connected"===o.status?$.post("ws_sitedataprovider.asmx/FbLogin",{mpAccessToken:o.authResponse.accessToken},function(o,e,n){g_FbStatus="true"==o.firstChild.innerHTML?"login":"nologin"}).fail(function(o,e,n){g_FbStatus="nologin"}):g_FbStatus="nologin"})},g_FbLogin=function(){FB.login(function(o){"connected"===o.status?$.post("ws_sitedataprovider.asmx/FbLogin",{mpAccessToken:o.authResponse.accessToken},function(o,e,n){"true"==o.firstChild.innerHTML?(alert("登入成功..."),parent.g_ShowHideLogin(),top.location.reload()):alert("登入失敗，請重新登入...")}).fail(function(o,e,n){console.log(n.message),alert("登入失敗，請稍後再試...")}):(o.status,alert("登入授權失敗..."))},{scope:"public_profile,email"})},g_FbRegister=function(){"login"==g_FbStatus?alert("已經註冊過FB會員，目前為FB會員登入狀態..."):FB.login(function(o){"connected"===o.status?$.post("ws_sitedataprovider.asmx/FbRegister",{mpAccessToken:o.authResponse.accessToken},function(o,e,n){"1"==o.firstChild.innerHTML?(alert("FB會員註冊成功..."),top.location.assign("/profile-fb.aspx?mode=0#title")):"2"==o.firstChild.innerHTML?confirm("您已經註冊過FB會員，您要修改會員資料嗎？")?top.location.assign("/profile-fb.aspx#title"):parent.g_ShowHideJoin(!1):alert("FB會員註冊失敗...")}).fail(function(o,e,n){console.log(n.message),alert("FB會員註冊失敗...")}):(o.status,alert("登入授權失敗..."))},{scope:"public_profile,email"})},g_FbAssociate=function(){FB.getLoginStatus(function(o){"connected"===o.status?$.post("ws_sitedataprovider.asmx/FbAssociate",{mpAccessToken:o.authResponse.accessToken},function(o,e,n){var i=o.firstChild.innerHTML;-1==i.indexOf(":")?alert("FB驗證失敗..."):(i=i.split(":"),alert(i[1]),"1"!=i[0]&&"-1"!=i[0]||top.location.reload())}).fail(function(o,e,n){console.log(n.message),alert("FB驗證失敗...")}):FB.login(function(o){"connected"===o.status?$.post("ws_sitedataprovider.asmx/FbAssociate",{mpAccessToken:o.authResponse.accessToken},function(o,e,n){var i=o.firstChild.innerHTML;-1==i.indexOf(":")?alert("FB驗證失敗..."):(i=i.split(":"),alert(i[1]),"1"!=i[0]&&"-1"!=i[0]||top.location.reload())}).fail(function(o,e,n){console.log(n.message),alert("FB驗證失敗...")}):(o.status,alert("登入授權失敗..."))},{scope:"public_profile,email"})})};$(document).ready(function(){g_ShowHideLoading(!1);try{$("img[usemap]").rwdImageMaps()}catch(o){}try{$(".navbar-toggle").on("click",g_HideFreeForm),$(".dropdown-toggle").on("click",function(){g_HideHamburgerMenu(),g_HideFreeForm()})}catch(o){}}),$(window).scroll(function(){g_WindowScrollTop=$(this).scrollTop(),1024<$(this).scrollTop()?$(".gotop").show():$(".gotop").hide()});
"use strict";$(function(){$(".dropdown-base").on("mouseenter click",function(){768<g_GetWindowWdith()&&(isMobile&&!isIOS&&($(".dropdown-base").removeClass("open"),$(".dropdown-menu").css("display","none")),$(this).hasClass("open")||($(".dropdown-toggle",$(this)).dropdown(),$(this).addClass("open"),isMobile&&!isIOS&&$(".dropdown-menu",$(this)).css("display","block")))}).mouseleave(function(){768<g_GetWindowWdith()&&($(this).blur().removeClass("open"),isMobile&&!isIOS&&($(".dropdown-base").removeClass("open"),$(".dropdown-menu").css("display","none")))}),$("#loginBtn").bind("click",function(){g_ShowHideLogin(!0)}),$("#joinBtn").bind("click",function(){g_ShowHideJoin(!0)});var o=function(){var o=g_GetWindowWdith();o<=361?$(".logo").attr("src","build/images/logo1_s.png"):$(".logo").attr("src","build/images/logo1.png"),o<921?$(".dropdown-menu[aria-labelledby=lmenu05]").addClass("dropdown-menu-right"):$(".dropdown-menu[aria-labelledby=lmenu05]").removeClass("dropdown-menu-right")};o(),$(window).bind("load",o),$(window).bind("resize",o),$(window).bind("orientationchange",o)});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
